// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppInputText should render both label and icon 1`] = `
<View>
  <Text
    style={
      Array [
        Object {
          "fontSize": 28,
          "paddingBottom": 12,
        },
        undefined,
      ]
    }
  >
    AppInputText
  </Text>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderColor": "#0000008A",
          "borderRadius": 4,
          "borderWidth": 0.6,
          "flexDirection": "row",
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
          },
        ]
      }
    >
      <TextInput
        autoCapitalize="none"
        autoCorrect={false}
        clearErrors={[Function]}
        formState={Object {}}
        getFieldState={[Function]}
        getValues={[Function]}
        handleSubmit={[Function]}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="placeholder"
        placeholderTextColor="#00000061"
        register={[Function]}
        reset={[Function]}
        resetField={[Function]}
        secureTextEntry={true}
        setError={[Function]}
        setFocus={[Function]}
        setValue={[Function]}
        spellCheck={false}
        style={
          Object {
            "backgroundColor": "white",
          }
        }
        trigger={[Function]}
        unregister={[Function]}
        value="defaultValues"
        watch={[Function]}
      />
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 24,
          "left": 24,
          "right": 24,
          "top": 24,
        }
      }
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "marginRight": 12,
          },
          Object {
            "opacity": 1,
          },
        ]
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": "#000000DE",
              "fontSize": 31.5,
            },
            undefined,
            Object {
              "fontFamily": "Feather",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        ï…£
      </Text>
    </View>
  </View>
</View>
`;
